worker_processes 1;

user __USER__ __USER__;

# Feel free to change all paths to suit your needs here, of course
pid __CABINET_PATH__/devops/nginx.pid;
error_log __CABINET_PATH__/devops/nginx_error.log;

events {
  worker_connections 1024; # increase if you have lots of clients
  accept_mutex off; # "on" if nginx worker_processes > 1
  use epoll; # enable for Linux 2.6+
  # use kqueue; # enable for FreeBSD, OSX
}

http {
  # nginx will find this file in the config directory set at nginx build time
  include mime.types;

  # fallback in case we can't determine a type
  default_type application/octet-stream;

  # click tracking!
  access_log __CABINET_PATH__/devops/nginx_access.log combined;

  sendfile on;

  tcp_nopush on; # off may be better for *some* Comet/long-poll stuff
  tcp_nodelay off; # on may be better for some Comet/long-poll stuff

  # we haven't checked to see if Rack::Deflate on the app server is
  # faster or not than doing compression via nginx.  It's easier
  # to configure it all in one place here for static files and also
  # to disable gzip for clients who don't get gzip/deflate right.
  # There are other other gzip settings that may be needed used to deal with
  # bad clients out there, see http://wiki.nginx.org/NginxHttpGzipModule
  gzip on;
  gzip_http_version 1.0;
  gzip_proxied any;
  gzip_min_length 500;
  gzip_disable "MSIE [1-6]\.";
  gzip_types text/plain text/xml text/css
             text/comma-separated-values
             text/javascript application/x-javascript
             application/atom+xml;

  server {
    listen 9878 default_server deferred;
    root __CABINET_PATH__;
    location / {
      autoindex on;
      autoindex_format json;
      error_page 404 /404.json;
      client_body_temp_path __CABINET_PATH__/client_temp;
      dav_methods PUT DELETE;
      create_full_put_path on;
      dav_access user:rw group:rw all:r;
    }

    location /404.json {
      alias __CABINET_PATH__/error_codes/404.json;
    }
  }
}
